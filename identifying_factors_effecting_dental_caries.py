# -*- coding: utf-8 -*-
"""Identifying Factors Effecting Dental Caries.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZCD-YjXglvuS3oRcrEobpXX16beBmHht

Step-1: Dataset overview

Objective: Understand the structure and content of the data

Libraries used:

'pandas' : For data manipulation and analysis

'numpy' : For numerical operations
"""

import pandas as pd
df=pd.read_csv('/content/DentalCaries (1).csv', encoding='ascii')

df.head()

df.describe()

"""Explanation:

We load the dataset using pandas to facilitate data manipulation.
The head() function provides a glimpse of the data, while describe() gives statistical summaries of numerical columns.

Step-2: Data Preprocessing

Objective: Clean the data by handling missing values, duplicates and incorrect data types
"""

#Check for Missing Values
df.isnull().sum()

#Drop Rows with missing values if any
df.dropna(inplace=True)

#Check for Duplicates
df.drop_duplicates(inplace=True)

#Convert data type if neccessary
df['dental caries'] = df['dental caries'].astype(int)

"""Explanation:

We check for missing values and drop any rows with missing data to ensure the integrity of our analysis.
Duplicates are removed to avoid skewing the results.
Data types are adjusted to ensure they are appropriate for analysis.

Step-3: Exploratory Data Analysis

Objective: Visualize and Analyze the Data to find patterns and Relationships

Libraries used:

'matplotlib' : For plotting Graphs

'seaborn' : For Statisical Data Visualization
"""

import matplotlib.pyplot as plt
import seaborn as sns

# Visualize the distribution of dental caries
sns.countplot(x='dental caries', data=df)
plt.title('Distribution of Dental Caries')
plt.show()

# Correlation heatmap
plt.figure(figsize=(12, 8))
sns.heatmap(df.corr(), annot=True, fmt=".2f", cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

"""Explanation:

We visualize the distribution of dental caries to understand its prevalence.

A correlation heatmap helps identify relationships between variables, indicating potential risk factors.

tep 4: Data Manipulation and Feature Engineering

Objective: Create new features that may help improve model performance.

Libraries Used:

pandas: For data manipulation.
"""

# Create a new feature: BMI (Body Mass Index)
df['BMI'] = df['weight(kg)'] / ((df['height(cm)'] / 100) ** 2)

"""Explanation:

We create a BMI feature, which is a common health metric that may correlate with dental health.

Step 5: Model Selection

Objective: Choose a suitable model to identify risk factors.

Libraries Used:

sklearn: For machine learning algorithms and evaluation metrics.
"""

from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix

# Define features and target variable
X = df.drop('dental caries', axis=1)
y = df['dental caries']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize and train the model
model = RandomForestClassifier()
model.fit(X_train, y_train)

"""Explanation:

We use a Random Forest Classifier due to its robustness and ability to handle non-linear relationships and interactions between features.

The dataset is split into training and testing sets to evaluate model performance.

Step 6: Model Evaluation

Objective: Assess the model's performance using appropriate metrics.
"""

# Make predictions
y_pred = model.predict(X_test)

# Evaluate the model
print(confusion_matrix(y_test, y_pred))
print(classification_report(y_test, y_pred))

"""Step 7: Data Visualization of Results

Objective: Visualize the model's predictions and feature importance.
"""

# Feature importance
import numpy as np
importances = model.feature_importances_
features = X.columns
indices = np.argsort(importances)[::-1]

plt.figure(figsize=(12, 6))
plt.title('Feature Importances')
plt.bar(range(X.shape[1]), importances[indices], align='center')
plt.xticks(range(X.shape[1]), features[indices], rotation=90)
plt.xlim([-1, X.shape[1]])
plt.show()

"""Explanation:

We visualize feature importance to identify which factors most influence dental caries.

Conclusion and Report
Summary:

We successfully identified risk factors affecting dental caries through a structured approach involving data preprocessing, EDA, feature engineering, modeling, and evaluation.

The Random Forest model provided insights into the importance of various features, helping to pinpoint significant risk factors.

Final Thoughts:

This project demonstrates the importance of a systematic approach to data analysis and modeling. Alternative models such as Logistic Regression or Support Vector Machines could also be explored for comparison.

Future work could involve deeper analysis of specific features or the inclusion of additional data sources for a more comprehensive understanding of dental caries risk factors.
"""

